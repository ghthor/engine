// Code generated by "stringer -type=CollisionType -output=collision_type_string.go"; DO NOT EDIT.

package coord

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CT_NONE-0]
	_ = x[CT_HEAD_TO_HEAD-1]
	_ = x[CT_FROM_SIDE-2]
	_ = x[CT_A_INTO_B-3]
	_ = x[CT_A_INTO_B_FROM_SIDE-4]
	_ = x[CT_SWAP-5]
	_ = x[CT_SAME_ORIG-6]
	_ = x[CT_SAME_ORIG_PERP-7]
	_ = x[CT_SAME_ORIG_DEST-8]
	_ = x[CT_CELL_DEST-9]
	_ = x[CT_CELL_ORIG-10]
}

const _CollisionType_name = "CT_NONECT_HEAD_TO_HEADCT_FROM_SIDECT_A_INTO_BCT_A_INTO_B_FROM_SIDECT_SWAPCT_SAME_ORIGCT_SAME_ORIG_PERPCT_SAME_ORIG_DESTCT_CELL_DESTCT_CELL_ORIG"

var _CollisionType_index = [...]uint8{0, 7, 22, 34, 45, 66, 73, 85, 102, 119, 131, 143}

func (i CollisionType) String() string {
	if i < 0 || i >= CollisionType(len(_CollisionType_index)-1) {
		return "CollisionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CollisionType_name[_CollisionType_index[i]:_CollisionType_index[i+1]]
}
